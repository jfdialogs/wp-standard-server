#!/usr/bin/env bash

if [ "root" != "$(whoami)" ]; then
  echo "Installation script must be run as root."
else
  PROJECT_DIR="/deploy-repo"
  RELAY_DIR="/deploy-relay"
  DOCKER_DIR="$PROJECT_DIR/docker"

  DEPLOY_ENV=prod
  SITE_USER=dmag

  export PROJECT_DIR
  export RELAY_DIR
  export DOCKER_DIR
  export DEPLOY_ENV
  export SITE_USER

  bash <(wget -qO - https://raw.githubusercontent.com/jfdialogs/wp-standard-server/master/docker/install-site-user)

  echo ""

  HAS_SITE_USER="$(getent passwd $SITE_USER)"

  if [ -z "$HAS_SITE_USER" ]; then
    echo "Installation failed on missing site user $SITE_USER."
  else
    echo "What is the git repo ssh address (format: git@github:[org]/[project-name].git)?"

    read GIT_REPO

    echo ""

    if [ -z "$GIT_REPO" ]; then
      echo "Install canceled."
    else
      if [ -d "$PROJECT_DIR" ]; then
        rm -d "$PROJECT_DIR"
      fi

      if [ -d "$RELAY_DIR" ]; then
        rm -d "$RELAY_DIR"
      fi

      mkdir "$PROJECT_DIR"
      mkdir "$RELAY_DIR"

      chown -R "$SITE_USER" "$PROJECT_DIR"
      chown -R "$SITE_USER" "$RELAY_DIR"
      chgrp -R "$SITE_USER" "$PROJECT_DIR"
      chgrp -R "$SITE_USER" "$RELAY_DIR"

      echo "Git cloning $GIT_REPO into $PROJECT_DIR as $SITE_USER"
      echo ""

      su -c "git clone -b PROD $GIT_REPO $PROJECT_DIR" - "$SITE_USER"

      echo ""

      if [ ! -s "$PROJECT_DIR/server" ]; then
        echo "Git repo $GIT_REPO not found or install error."
        echo ""
      else
        "$DOCKER_DIR/init-prod-server" && echo ""
        "$DOCKER_DIR/install-deployment-hooks" && echo ""
        "$DOCKER_DIR/own-project" && echo ""
        "$DOCKER_DIR/setup-volume" && echo ""

        cd "$PROJECT_DIR"

        source "$PROJECT_DIR/.env"
        source "$PROJECT_DIR/.env.prod"

        export PROD_DB_HOST
        export PROD_DB_PORT
        export PROD_DB_NAME
        export PROD_DB_USER
        export PROD_DB_PASSWORD

        cp "$PROJECT_DIR/compose-prod.yaml" "$PROJECT_DIR/compose-install.yaml"

        sed -i -e 's/\/etc\/apache2/\/etc\/apache-temp/g' "$PROJECT_DIR/compose-install.yaml"
        sed -i -e 's/\/etc\/letsencrypt/\/etc\/letsencrypt-temp/g' "$PROJECT_DIR/compose-install.yaml"

        docker-compose -f "$PROJECT_DIR/compose-install.yaml" up -d --remove-orphans

        docker-compose -f "$PROJECT_DIR/compose-install.yaml" exec app cp -r /etc/apache2/. /etc/apache-temp/
        docker-compose -f "$PROJECT_DIR/compose-install.yaml" exec app cp -r /etc/letsencrypt/. /etc/letsencrypt-temp/

        docker-compose -f "$PROJECT_DIR/compose-install.yaml" stop
        docker-compose -f "$PROJECT_DIR/compose-install.yaml" down

        ls -lah "/mnt/$PROJECT_VOLUME/conf/apache"
        ls -lah "/mnt/$PROJECT_VOLUME/conf/letsencrypt"

        rm "$PROJECT_DIR/compose-install.yaml"

        echo ""
        echo "Start prod server with './server start-prod'."
        echo ""
      fi

      echo "Production server installed."
    fi
  fi
fi
